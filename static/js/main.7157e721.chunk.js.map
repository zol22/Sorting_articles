{"version":3,"sources":["../node_modules/h8k-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","components/Articles.js","App.js","registerServiceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Articles","articles","className","article","index","data-testid","key","title","upvotes","toString","date","App","useState","listOfArticles","setListOfArticles","header","onClick","articlesNew","sort","first","second","console","log","date_1","Date","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","applyPolyfills","defineCustomElements"],"mappings":"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","file":"static/js/main.7157e721.chunk.js","sourcesContent":["var map = {\n\t\"./h8k-logo_2.entry.js\": [\n\t\t21,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 16;\nmodule.exports = webpackAsyncContext;","import React from 'react';\n\nfunction Articles({articles}) {\n\n    return (\n        <div className=\"card w-50 mx-auto\">\n            <table>\n                <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Upvotes</th>\n                    <th>Date</th>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    articles.map((article, index) => (\n                        <tr data-testid=\"article\" key={index}>\n                            <td data-testid=\"article-title\">{article.title}</td>\n                            <td data-testid=\"article-upvotes\">{article.upvotes.toString()}</td>\n                            <td data-testid=\"article-date\">{article.date}</td>\n                        </tr>\n                    ))\n                }\n                \n                </tbody>\n            </table>\n        </div>\n    );\n\n}\n\nexport default Articles;\n","import React, { useState } from 'react';\nimport './App.css';\nimport 'h8k-components';\n\nimport Articles from './components/Articles';\n\nconst title = \"Sorting Articles\";\n\nfunction App({articles}) {\n    const [listOfArticles , setListOfArticles ] = useState(articles)\n\n    const date = () => {\n        var articlesNew = [];\n        articlesNew = [...listOfArticles];\n        articlesNew.sort((first,second) => {\n            const date_1 = new Date(first.date);\n            const date_2 = new Date(second.date);\n           /* if (date_1 > date_2) {\n                return -1\n            }\n            if (date_1 < date_2){\n                return 1\n            }\n            return 0;*/\n            return date_2 - date_1; // shortcut\n        })\n        setListOfArticles(articlesNew)\n    }\n    const upvotes = () => {\n        var articlesNew = [];\n        articlesNew = [...listOfArticles]\n        // Sort by upvotes\n        articlesNew.sort((first,second) => {\n            /* return value: Default,For ascending order\n                > 0 : sort b before a ; a is greater than b\n                < 0 : sort a before b ; a is less than b \n              === 0 : keep original order of a and b , a must be equal to b\n            */\n\n      \n            if(first.upvotes > second.upvotes) {\n                console.log(first, second)\n                console.log(\"first\")\n                return -1;\n            }\n            if (first.upvotes < second.upvotes){\n                console.log(first, second)\n                console.log(\"second\")\n                return 1; \n            }\n            return 0; \n        })\n        setListOfArticles(articlesNew)\n\n    }\n\n    return (\n        <div className=\"App\">\n            <h8k-navbar header={title}></h8k-navbar>\n            <div className=\"layout-row align-items-center justify-content-center my-20 navigation\">\n                <label className=\"form-hint mb-0 text-uppercase font-weight-light\">Sort By</label>\n                <button data-testid=\"most-upvoted-link\" className=\"small\" onClick={upvotes}>Most Upvoted</button>\n                <button data-testid=\"most-recent-link\" className=\"small\" onClick={date}> Most Recent</button>\n            </div>\n            <Articles articles={listOfArticles}/>\n        </div>\n    );\n\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {applyPolyfills, defineCustomElements} from 'h8k-components/loader';\n\nconst ARTICLES = [\n  {\n    title: \"A message to our customers\",\n    upvotes: 12,\n    date: \"2020-01-24\",\n  },\n  {\n    title: \"Alphabet earnings\",\n    upvotes: 22,\n    date: \"2019-11-23\",\n  },\n  {\n    title: \"Artificial Mountains\",\n    upvotes: 2,\n    date: \"2019-11-22\",\n  },/*\n  {\n    title: \"Scaling to 100k Users\",\n    upvotes: 72,\n    date: \"2019-01-21\",\n  },\n  {\n    title: \"the Emu War\",\n    upvotes: 24,\n    date: \"2019-10-21\",\n  },\n  {\n    title: \"What's SAP\",\n    upvotes: 1,\n    date: \"2019-11-21\",\n  },\n  {\n    title: \"Simple text editor has 15k monthly users\",\n    upvotes: 7,\n    date: \"2010-12-31\",\n  },*/\n];\n\nReactDOM.render(<App articles={ARTICLES} />, document.getElementById('root'));\nregisterServiceWorker();\n\napplyPolyfills().then(() => {\n    defineCustomElements(window);\n})\n"],"sourceRoot":""}